services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/app
    environment:
      REDIS_URL: ${REDIS_URL}
      RAILS_ENV: ${RAILS_ENV}
    depends_on:
      - db
      - redis
      - es
    networks:
      - app-network

  redis:
    image: redis:7.0-alpine
    command: redis-server
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  website:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && rails db:create && rails db:migrate && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_URL: ${REDIS_URL}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
    depends_on:
      - db
      - redis
      - es
    networks:
      - app-network

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    environment:
      - node.name=es
      - cluster.name=cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - http.port=9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data
    restart: always
    ports:
      - "9200:9200"
    networks:
    - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_URL}
    depends_on:
      - es
    ports:
      - "5601:5601"
    networks:
    - app-network

volumes:
  db_data:
  redis:
  es:

networks:
  app-network:
